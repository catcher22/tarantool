# encoding: utf-8
#
import sys
# clear statistics:
server.stop()
server.deploy()

admin("box.show_injections()")
admin("box.set_injection('some-injection', 1)")
sql("select * from t0 where k0 = 222444")
admin("box.set_injection('ERRINJ_TESTING', 1)")
sql("select * from t0 where k0 = 222444")
admin("box.set_injection('ERRINJ_TESTING', 0)")

# Check how well we handle a failed log write.
admin("box.set_injection('ERRINJ_WAL_IO', 1)")
sql("insert into t0 values (1)")
sql("select * from t0 where k0=1")
admin("box.set_injection('ERRINJ_WAL_IO', 0)")
sql("insert into t0 values (1)")
admin("box.set_injection('ERRINJ_WAL_IO', 1)")
sql("update t0 set k0=2 where k0=1")
sql("select * from t0 where k0=1")
sql("select * from t0 where k0=2")
admin("box.set_injection('ERRINJ_WAL_IO', 0)")
admin("box.space[0]:truncate()")

# Check a failed log rotation.
admin("box.set_injection('ERRINJ_WAL_ROTATE', 1)")
sql("insert into t0 values (1)")
sql("select * from t0 where k0=1")
admin("box.set_injection('ERRINJ_WAL_ROTATE', 0)")
sql("insert into t0 values (1)")
admin("box.set_injection('ERRINJ_WAL_ROTATE', 1)")
sql("update t0 set k0=2 where k0=1")
sql("select * from t0 where k0=1")
sql("select * from t0 where k0=2")
admin("box.set_injection('ERRINJ_WAL_ROTATE', 0)")
sql("update t0 set k0=2 where k0=1")
sql("select * from t0 where k0=1")
sql("select * from t0 where k0=2")
admin("box.set_injection('ERRINJ_WAL_ROTATE', 1)")
admin("box.space[0]:truncate()")
admin("box.set_injection('ERRINJ_WAL_ROTATE', 0)")
admin("box.space[0]:truncate()")
# vim: syntax=python
