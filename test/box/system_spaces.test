# encoding: tarantool
#

import os
import sys

print """
#-----------------------------------------------------------------------------#
# System spaces: test conversion from the config file
#-----------------------------------------------------------------------------#
"""

# stop current server
server.stop()
# start server from config with holes in spaces
server.deploy("box/tarantool_system_spaces.cfg")

# Check conversion from config file to system spaces
exec admin "lua for v in box.space['sys_space'].index['pk']:iterator(box.index.ALL) do print(v) end"

# Check conversion from config file to system spaces
exec admin "lua for v in box.space['sys_index'].index['pk']:iterator(box.index.ALL) do print(v) end"

print """
#-----------------------------------------------------------------------------#
# System spaces: check trigger test - basic
#-----------------------------------------------------------------------------#
"""

# ok
exec admin "lua print(box.space[0].name)"
exec admin "lua print(box.space['0'].name)"

# tuple is read-only
exec admin "lua box.replace(box.space.sys_space.n, box.space.sys_space.n, '0', 0, 0)"
exec admin "lua box.delete(box.space.sys_space.n, box.space.sys_index.n)"

# tuple is read-only
exec admin "lua box.replace(box.space.sys_index.n, box.space.sys_space.n, 0, '0', 0, 0)"
exec admin "lua box.delete(box.space.sys_index.n, box.space.sys_index.n, 0)"

# invalid space_no
exec admin "lua box.replace(box.space.sys_space.n, 4294967295, '0', 0, 0)"

# name is too long
exec admin "lua box.replace(box.space.sys_space.n, 0, string.rep('*', 126), 0, 0, 0, 1)"

# ok
exec admin "lua box.replace(box.space.sys_space.n, 0, 'test', 0, 0, 0, 1)"
# space does not exists
exec admin "lua print(box.space['0'].name)"
# ok
exec admin "lua print(box.space['test'].name)"

# duplicate field defition
exec admin "lua box.replace(box.space.sys_space.n, 666, 'test', 0, 0, 0, 1, 0, 1)"

# invalid field_type
exec admin "lua box.replace(box.space.sys_space.n, 0, '0', 0, 0, 0, 0)"

# field 0 is not defined as required by index
exec admin "lua box.replace(box.space.sys_space.n, 0, '0', 0, 0, 2, 3)"

# name is too long
exec admin "lua box.replace(box.space.sys_index.n, 0, 0, string.rep('*', 126), 0, 1, 0)"

# ok
exec admin "lua box.replace(box.space.sys_index.n, 0, 0, 'kkk', 0, 1, 0)"
# ok
exec admin "lua print(box.space[0].index['kkk'].type)"
# ok
exec admin "lua print(box.space[0].index[0].type)"
# nil
exec admin "lua print(box.space[0].index['pk'])"

# primary key must be unique
exec admin "lua box.replace(box.space.sys_index.n, 0, 0, 'kkk', 1, 0, 0)"

# at least one field is needed
exec admin "lua box.replace(box.space.sys_index.n, 0, 1, 'kkk', 0, 1)"

# space=0, field 5 is not defined as required by index 1
exec admin "lua box.replace(box.space.sys_index.n, 0, 1, 'kkk', 0, 1, 5)"

# this index is unique only
exec admin "lua box.replace(box.space.sys_index.n, 0, 1, 'kkk', 0, 0, 1)"

# this index is single-part only
exec admin "lua box.replace(box.space.sys_index.n, 0, 1, 'kkk', 0, 0, 1, 2)"

# invalid index type
exec admin "lua box.replace(box.space.sys_index.n, 0, 1, 'kkk', 999, 1, 1)"

# invalid index_no
exec admin "lua box.replace(box.space.sys_index.n, 0, 4294967295, 'kkk', 999, 1, 1)"

# invalid space_no'
exec admin "lua box.replace(box.space.sys_index.n, 4294967295, 0, 'kkk', 999, 1, 1)"

# space does not exist
exec admin "lua box.replace(box.space.sys_index.n, 666, 0, 'kkk', 999, 1, 1)"

print """
#-----------------------------------------------------------------------------#
# System spaces: check trigger test - a space with data
#-----------------------------------------------------------------------------#
"""

# insert some data into the space
exec admin "lua box.insert(0, 1, 2, 3)"

# ok
exec admin "lua box.replace(box.space.sys_space.n, 0, '0', 0, 0, 0, 1)"

# arity is read-only
exec admin "lua box.replace(box.space.sys_space.n, 0, '0', 2, 0, 0, 1)"

# flags are read-only
exec admin "lua box.replace(box.space.sys_space.n, 0, '0', 0, 4, 0, 1)"

# field defs are read-only
exec admin "lua box.replace(box.space.sys_space.n, 0, '0', 0, 0, 0, 1, 1, 1)"

# field defs are read-only
exec admin "lua box.replace(box.space.sys_space.n, 0, '0', 0, 0, 0, 2)"

# ok
exec admin "lua box.replace(box.space.sys_index.n, 0, 0, 'pk', 0, 1, 0)"

# cannot change the index, because space is not empty
exec admin "lua box.replace(box.space.sys_index.n, 0, 0, 'pk', 1, 1, 0)"

# cannot change the index, because space is not empty
exec admin "lua box.replace(box.space.sys_index.n, 0, 0, 'pk', 0, 1, 0, 0)"

# cannot change the index, because space is not empty
exec admin "lua box.replace(box.space.sys_index.n, 0, 0, 'pk', 1, 1, 0)"

print """
#-----------------------------------------------------------------------------#
# System spaces: check trigger test - space create/delete
#-----------------------------------------------------------------------------#
"""

exec admin "lua box.replace(box.space.sys_space.n, 0, 'test', 0, 0, 0, 1)"
# Duplicate key exists in unique index 1
exec admin "lua box.insert(box.space.sys_space.n, 666, 'test', 0, 0, 0, 1)"
# Duplicate key exists in unique index 0
exec admin "lua box.insert(box.space.sys_space.n, 0, 'xxx', 0, 0, 0, 1)"

# ok
exec admin "lua box.insert(box.space.sys_space.n, 100, 'new', 0, 0, 0, 1, 1, 3)"

# primary key is not configured'
exec admin "lua box.space[100].name"

# primary key is not configured'
exec admin "lua box.space['new'].name"

# ok
exec admin "lua box.insert(box.space.sys_index.n, 100, 0, 'pk', 1, 1, 0, 1)"

# ok
exec admin "lua box.space[100].name"
exec admin "lua box.space['new'].name"
exec admin "lua box.space['new'].n"
exec admin "lua box.space['new'].enabled"
exec admin "lua box.space['new'].cardinality"
exec admin "lua box.space['new'].index['pk'].name"
exec admin "lua box.space['new'].index['pk'].n"
exec admin "lua box.space['new'].index['pk'].type"
exec admin "lua box.space['new'].index['pk'].unique"
exec admin "lua box.space['new'].index['pk'].key_field[0].fieldno"
exec admin "lua box.space['new'].index['pk'].key_field[0].type"
exec admin "lua box.space['new'].index['pk'].key_field[1].fieldno"
exec admin "lua box.space['new'].index['pk'].key_field[1].type"
exec admin "lua box.space['new'].index['pk']:min()"
exec admin "lua box.space['new']:truncate()"
exec admin "lua for v in box.space['new'].index['pk']:iterator() do print(v) end"

# ok
exec admin "lua box.insert(box.space.sys_index.n, 100, 1, 'test1', 0, 1, 1)"
exec admin "lua box.space['new'].index['test1'].name"
exec admin "lua box.space['new'].index['test1'].n"
exec admin "lua box.space['new'].index['test1'].type"
exec admin "lua box.space['new'].index['test1'].unique"
exec admin "lua box.space['new'].index['test1'].key_field[0].fieldno"
exec admin "lua box.space['new'].index['test1'].key_field[0].type"

# ok
exec admin "lua box.replace(box.space.sys_space.n, 100, 'new', 0, 0, 0, 2, 1, 1)"
exec admin "lua box.space['new'].index['pk'].key_field[0].fieldno"
exec admin "lua box.space['new'].index['pk'].key_field[0].type"
exec admin "lua box.space['new'].index['pk'].key_field[1].fieldno"
exec admin "lua box.space['new'].index['pk'].key_field[1].type"
exec admin "lua box.space['new'].index['test1'].key_field[0].fieldno"
exec admin "lua box.space['new'].index['test1'].key_field[0].type"

# ok
exec admin "lua box.replace(box.space.sys_space.n, 100, 'new', 0, 0, 0, 1, 1, 3, 2, 3)"
exec admin "lua box.insert(box.space.sys_index.n, 100, 2, 'test2', 0, 1, 2)"
exec admin "lua box.space['new'].index['test2'].key_field[0].fieldno"
exec admin "lua box.space['new'].index['test2'].key_field[0].type"

# ok 
exec admin "lua box.delete(box.space.sys_index.n, 100, 1)"
# ok
exec admin "lua box.space['new'].index['pk'].name"
# nil
exec admin "lua box.space['new'].index['test1'].name"
# ok
exec admin "lua box.space['new'].index['test2'].name"

# ok
exec admin "lua box.insert(box.space['new'].n, 1, 2, 3)"

# cannot change the index, because space is not empty
exec admin "lua box.delete(box.space.sys_index.n, 100, 2)"

# ok
exec admin "lua box.delete(100, 1, 2)"

# ok
exec admin "lua box.delete(box.space.sys_index.n, 100, 2)"

# ok
exec admin "lua box.delete(box.space.sys_index.n, 100, 1)"
# nil
exec admin "lua box.space['new'].index['test1']"

# ok
exec admin "lua box.delete(box.space.sys_index.n, 100, 0)"
# primary key is not configured
exec admin "lua box.space['new'].index['test1']"

exec admin "lua for v in box.space['sys_index'].index['pk']:iterator(box.index.EQ, 100) do print(v) end"

# ok 
exec admin "lua box.replace(box.space.sys_space.n, 100, 'new', 0, 0, 0, 1)"

exec admin "lua box.insert(box.space.sys_index.n, 100, 0, 'pk', 1, 1, 0)"
exec admin "lua box.space['new'].index['pk'].name"

exec admin "lua box.insert(box.space['new'].n, 1)"

# restore default server
server.stop()
server.deploy(self.suite_ini["config"])

# vim: syntax=python
